// @generated by protobuf-ts 2.9.1
// @generated from protobuf file "goagen_goa_todo_example_todos.proto" (package "todos", syntax proto3)
// tslint:disable
//
// Code generated with goa v3.13.2, DO NOT EDIT.
//
// todos protocol buffer definition
//
// Command:
// $ goa gen github.com/akm/goa_todo_example/design
//
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { Todos } from "./goagen_goa_todo_example_todos";
import type { DeleteResponse } from "./goagen_goa_todo_example_todos";
import type { DeleteRequest } from "./goagen_goa_todo_example_todos";
import type { UpdateResponse } from "./goagen_goa_todo_example_todos";
import type { UpdateRequest } from "./goagen_goa_todo_example_todos";
import type { CreateResponse } from "./goagen_goa_todo_example_todos";
import type { CreateRequest } from "./goagen_goa_todo_example_todos";
import type { ShowResponse } from "./goagen_goa_todo_example_todos";
import type { ShowRequest } from "./goagen_goa_todo_example_todos";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { ListResponse } from "./goagen_goa_todo_example_todos";
import type { ListRequest } from "./goagen_goa_todo_example_todos";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * Service is the todos service interface.
 *
 * @generated from protobuf service todos.Todos
 */
export interface ITodosClient {
    /**
     * List implements list.
     *
     * @generated from protobuf rpc: List(todos.ListRequest) returns (todos.ListResponse);
     */
    list(input: ListRequest, options?: RpcOptions): UnaryCall<ListRequest, ListResponse>;
    /**
     * Show implements show.
     *
     * @generated from protobuf rpc: Show(todos.ShowRequest) returns (todos.ShowResponse);
     */
    show(input: ShowRequest, options?: RpcOptions): UnaryCall<ShowRequest, ShowResponse>;
    /**
     * Create implements create.
     *
     * @generated from protobuf rpc: Create(todos.CreateRequest) returns (todos.CreateResponse);
     */
    create(input: CreateRequest, options?: RpcOptions): UnaryCall<CreateRequest, CreateResponse>;
    /**
     * Update implements update.
     *
     * @generated from protobuf rpc: Update(todos.UpdateRequest) returns (todos.UpdateResponse);
     */
    update(input: UpdateRequest, options?: RpcOptions): UnaryCall<UpdateRequest, UpdateResponse>;
    /**
     * Delete implements delete.
     *
     * @generated from protobuf rpc: Delete(todos.DeleteRequest) returns (todos.DeleteResponse);
     */
    delete(input: DeleteRequest, options?: RpcOptions): UnaryCall<DeleteRequest, DeleteResponse>;
}
/**
 * Service is the todos service interface.
 *
 * @generated from protobuf service todos.Todos
 */
export class TodosClient implements ITodosClient, ServiceInfo {
    typeName = Todos.typeName;
    methods = Todos.methods;
    options = Todos.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * List implements list.
     *
     * @generated from protobuf rpc: List(todos.ListRequest) returns (todos.ListResponse);
     */
    list(input: ListRequest, options?: RpcOptions): UnaryCall<ListRequest, ListResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<ListRequest, ListResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * Show implements show.
     *
     * @generated from protobuf rpc: Show(todos.ShowRequest) returns (todos.ShowResponse);
     */
    show(input: ShowRequest, options?: RpcOptions): UnaryCall<ShowRequest, ShowResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<ShowRequest, ShowResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * Create implements create.
     *
     * @generated from protobuf rpc: Create(todos.CreateRequest) returns (todos.CreateResponse);
     */
    create(input: CreateRequest, options?: RpcOptions): UnaryCall<CreateRequest, CreateResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateRequest, CreateResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * Update implements update.
     *
     * @generated from protobuf rpc: Update(todos.UpdateRequest) returns (todos.UpdateResponse);
     */
    update(input: UpdateRequest, options?: RpcOptions): UnaryCall<UpdateRequest, UpdateResponse> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<UpdateRequest, UpdateResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * Delete implements delete.
     *
     * @generated from protobuf rpc: Delete(todos.DeleteRequest) returns (todos.DeleteResponse);
     */
    delete(input: DeleteRequest, options?: RpcOptions): UnaryCall<DeleteRequest, DeleteResponse> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<DeleteRequest, DeleteResponse>("unary", this._transport, method, opt, input);
    }
}
