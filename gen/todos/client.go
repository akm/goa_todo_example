// Code generated by goa v3.13.2, DO NOT EDIT.
//
// todos client
//
// Command:
// $ goa gen github.com/akm/goa_todo_example/design

package todos

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "todos" service client.
type Client struct {
	ListEndpoint   goa.Endpoint
	ShowEndpoint   goa.Endpoint
	CreateEndpoint goa.Endpoint
	UpdateEndpoint goa.Endpoint
	DeleteEndpoint goa.Endpoint
}

// NewClient initializes a "todos" service client given the endpoints.
func NewClient(list, show, create, update, delete_ goa.Endpoint) *Client {
	return &Client{
		ListEndpoint:   list,
		ShowEndpoint:   show,
		CreateEndpoint: create,
		UpdateEndpoint: update,
		DeleteEndpoint: delete_,
	}
}

// List calls the "list" endpoint of the "todos" service.
func (c *Client) List(ctx context.Context) (res *TodoList, err error) {
	var ires any
	ires, err = c.ListEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.(*TodoList), nil
}

// Show calls the "show" endpoint of the "todos" service.
func (c *Client) Show(ctx context.Context, p *ShowPayload) (res *Todo, err error) {
	var ires any
	ires, err = c.ShowEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Todo), nil
}

// Create calls the "create" endpoint of the "todos" service.
func (c *Client) Create(ctx context.Context, p *TodoCreatePayload) (res *Todo, err error) {
	var ires any
	ires, err = c.CreateEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Todo), nil
}

// Update calls the "update" endpoint of the "todos" service.
func (c *Client) Update(ctx context.Context, p *UpdatePayload) (res *Todo, err error) {
	var ires any
	ires, err = c.UpdateEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Todo), nil
}

// Delete calls the "delete" endpoint of the "todos" service.
func (c *Client) Delete(ctx context.Context, p *DeletePayload) (res *Todo, err error) {
	var ires any
	ires, err = c.DeleteEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Todo), nil
}
